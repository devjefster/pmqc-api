basePath: /
definitions:
  storage.AmostraResponse:
    properties:
      cnpj:
        type: string
      dataColeta:
        type: string
      estado:
        type: string
      grupoProduto:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      municipio:
        type: string
      produto:
        type: string
      razaoSocial:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for fetching and storing PMQC data.
  title: PMQC API
  version: "1.0"
paths:
  /amostras:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of amostras, filtered by CNPJ, RazaoSocial,
        Produto, or Municipio
      parameters:
      - default: 10
        description: Number of records per page
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: CNPJ of the posto
        in: query
        name: cnpj
        type: string
      - description: Razao Social of the posto
        in: query
        name: razaoSocial
        type: string
      - description: Product name
        in: query
        name: produto
        type: string
      - description: Municipio name
        in: query
        name: municipio
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/storage.AmostraResponse'
            type: array
        "500":
          description: Database error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all amostras with pagination and filters
      tags:
      - storage
  /amostras/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves details of an amostra including its associated posto
      parameters:
      - description: Amostra ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.AmostraResponse'
        "400":
          description: Invalid ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Amostra not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a specific amostra by ID
      tags:
      - storage
  /fetch:
    get:
      consumes:
      - application/json
      description: Fetches PMQC data from the Brazilian government API
      parameters:
      - description: Year of data to fetch
        in: query
        name: year
        required: true
        type: integer
      - description: Month of data to fetch
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Fetch PMQC Data
      tags:
      - fetcher
swagger: "2.0"
